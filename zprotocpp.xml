<contract name = "zprotocpp" script = "zprotocpp">
<!-- Transport -->
<class name = "BaseEvent">
    <property name = "id"  type = "unsigned char" key = "true"/>
</class>

<!-- Control -->
<class name = "LoginBaseEvent" inherits = "BaseEvent">
    <property name = "userid" type = "std::string" include = "string" extended = "true"/>
    <property name = "passwd" type = "std::string" include = "string" extended = "true"/>
</class>
<class name = "LoginReply" inherits = "BaseEvent">
    <property name = "error" type = "unsigned int"/>
    <property name = "token" type = "unsigned int"/>
</class>
<class name = "SubscriptionBaseEvent" inherits = "BaseEvent">
    <property name = "token" type = "unsigned int"/>
    <property name = "userid" type = "std::string" include = "string" extended = "true"/>
</class>
<class name = "SubscriptionReply" inherits = "BaseEvent">
    <property name = "error" type = "unsigned int"/>
    <property name = "userid" type = "std::string" include = "string"/>
</class>

<!-- Exchange -->
<class name = "Event" inherits = "BaseEvent">
    <property name = "gid" type = "long long int"/>
    <property name = "token" type = "unsigned int"/>
    <property name = "userid" type = "std::string" include = "string" extended = "true"/>
    <property name = "data" type = "std::vector<unsigned char>" include = "vector" extended = "true"/>
</class>
<class name = "EventReply" inherits = "BaseEvent">
    <property name = "error" type = "unsigned int"/>
    <property name = "gid" type = "long long int"/>
    <property name = "mid" type = "unsigned int"/>
</class>
</contract>
